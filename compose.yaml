services:
  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "19000:19000"
      - "19001:19001"
      - "19002:19002"
      - "19006:19006"
    environment:
      - NODE_ENV=development
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - AUTH_API_URL=http://localhost:8081
      - TIERLIST_API_URL=http://localhost:8082
      - CHAT_API_URL=http://localhost:8083
      - IMAGE_API_URL=http://localhost:8084
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Authentication service
  auth-service:
    build:
      context: ./auth-user-service
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATA_MONGODB_URI=mongodb://admin:A@mongodb:27017/auth_db?authSource=admin
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - ALLOWED_ORIGINS=http://localhost:19000,http://localhost:19006
    depends_on:
      - mongodb

  # Tier list service
  tier-list-service:
    build:
      context: ./tier-list-service
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATA_MONGODB_URI=mongodb://admin:${MONGO_ROOT_PASSWORD}@mongodb:27017/tier_list_db?authSource=admin
      - ALLOWED_ORIGINS=http://localhost:19000,http://localhost:19006
    depends_on:
      - mongodb

  # Chat service
  chat-service:
    build:
      context: ./chat_api
      dockerfile: Dockerfile
    ports:
      - "8083:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/chat_db
      - ALLOWED_ORIGINS=http://localhost:19000,http://localhost:19006
      - SPRING_DATA_CASSANDRA_KEYSPACE-NAME=chat_keyspace
      - SPRING_DATA_CASSANDRA_CONTACT-POINTS=localhost
      - SPRING_DATA_CASSANDRA_PORT=9042
      - SPRING_DATA_CASSANDRA_DATACENTER=datacenter1
    depends_on:
      - cassandra

  # Cassandra service for chat
  cassandra:
    image: cassandra:latest
    container_name: proj2_cassandra
    hostname: proj2_cassandra
    ports:
      - "9005:7000"
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSER_NAME=PROJ2_CLUSER
      - CASSANDRA_DC=DC1
      - CASSANDRA_RACK=RACK1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
    volumes:
      - cassandra-node-1:/var/lib/cassandra:rw
    healthcheck:
      test: ["CMD-SHELL", "nodetool status"]
      interval: 2m
      start_period: 2m
      timeout: 10s
      retries: 3

  # Image Storage Service
  image-storage-service:
    build:
      context: ./image-storage-service
      dockerfile: Dockerfile
    ports:
      - "8084:8080"
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATA_MONGODB_URI=mongodb://admin:${MONGO_ROOT_PASSWORD}@mongodb:27017/image_storage_db?authSource=admin
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_REGION=${AWS_S3_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - ALLOWED_ORIGINS=http://localhost:19000,http://localhost:19006,http://localhost:8082
    depends_on:
      - mongodb

  # MongoDB (for Image Storage)
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=A
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

volumes:
  postgres_data:
  mongodb_data:
  cassandra-node-1:
