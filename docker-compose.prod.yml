services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    ports:
      - "19006:19006"
    environment:
      - NODE_ENV=production
      # Direct API URLs
      - AUTH_API_URL=http://auth-service:8080
      - TIERLIST_API_URL=http://tier-list-service:8080
      - CHAT_API_URL=http://chat-service:8080
      - IMAGE_API_URL=http://image-storage-service:8080
    restart: unless-stopped

  image-storage-service:
    build:
      context: ./image-storage-service
      dockerfile: Dockerfile
    ports:
      - "8084:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_REGION=${AWS_S3_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - JAVA_OPTS=-XX:+UseG1GC -Xmx512m -Xms256m
      - SPRING_DATA_MONGODB_URI=mongodb://admin:${MONGO_ROOT_PASSWORD}@mongodb:27017/image_storage_db?authSource=admin
      # CORS Configuration
      - ALLOWED_ORIGINS=http://localhost:19006,http://frontend:19006
    restart: unless-stopped
    depends_on:
      - mongodb

  auth-service:
    build:
      context: ./auth-user-service
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - JAVA_OPTS=-XX:+UseG1GC -Xmx512m -Xms256m
      - SPRING_DATA_MONGODB_URI=mongodb://admin:${MONGO_ROOT_PASSWORD}@mongodb:27017/auth_db
      # CORS Configuration
      - ALLOWED_ORIGINS=http://localhost:19006,http://frontend:19006
      - OAUTH2_REDIRECT_URI=http://localhost:19006/oauth2/redirect
    restart: unless-stopped
    depends_on:
      - mongodb

  tier-list-service:
    build:
      context: ./tier-list-service
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATA_MONGODB_URI=mongodb://admin:${MONGO_ROOT_PASSWORD}@mongodb:27017/tier_list_db?authSource=admin
      - ALLOWED_ORIGINS=http://localhost:19006,http://frontend:19006
    restart: unless-stopped
    depends_on:
      - mongodb

  chat-service:
    build:
      context: ./chat_api
      dockerfile: Dockerfile
    ports:
      - "8083:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/chat_db
      - JAVA_OPTS=-XX:+UseG1GC -Xmx512m -Xms256m
      # CORS Configuration
      - ALLOWED_ORIGINS=http://localhost:19006,http://frontend:19006
    restart: unless-stopped
    depends_on:
      - db

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
      - POSTGRES_USER=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    secrets:
      - db_password

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=auth_db
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local

secrets:
  db_password:
    file: ./secrets/db_password.txt 